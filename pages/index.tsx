import React, { useState } from "react";
import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/cookies.module.css";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [isGenerated, setIsGenerated] = useState(false);
  const [name, setName] = useState("");
  const [value, setValue] = useState("");
  const [errorMessage, setErrorMessage] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState("");

  function handleGenerateClick() {
    if (!name || !value) {
      setErrorMessage("Veuillez remplir tous les champs");
    } else {
      setIsGenerated(true);
      setName("");
      setValue("");
      setTimeout(() => setIsGenerated(false), 2000);
      setErrorMessage(null);
      const date = new Date();
      date.setTime(date.getTime() + 7 * 24 * 60 * 60 * 1000); // 7 jours
      const expires = date.toUTCString();

      document.cookie = `${name}=${value};expires=${expires};path=/;domain=localhost`;
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body className={styles.selector}>
        <h1 className={styles.title}>
          G√©n√©rateur de <span className={styles.span}>&nbsp;Cookies&nbsp;</span>{" "}
          üç™
        </h1>
        <div className={styles.container}>
          <label htmlFor="nom">Nom :</label>
          <input
            type="text"
            id="nom"
            name="nom"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
          <br />

          <label htmlFor="valeur">Valeur :</label>
          <input
            type="text"
            id="valeur"
            name="valeur"
            value={value}
            onChange={(e) => setValue(e.target.value)}
          />
          <br />

          {errorMessage && (
            <div className={styles["error-message"]}>{errorMessage}</div>
          )}

          <div className={styles["button-container"]}>
            <button
              type="button"
              id="generer"
              style={{ marginRight: 15 }}
              onClick={handleGenerateClick}
            >
              G√©n√©rer
            </button>
            <button type="button" id="afficher">
              Afficher
            </button>
          </div>
          {isGenerated && (
            <div className={styles["cookie-message"]}>Cookie g√©n√©r√©</div>
          )}
        </div>
      </body>
    </>
  );
}
